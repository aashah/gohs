name: Continuous integration

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-18.04, macos-latest]
        go: [1.17.x 1.16.x, 1.15.x, 1.14.x, 1.13.x, 1.9.x]
    name: Go ${{ matrix.go }} tests @ ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Linux dependencies
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev libpcap-dev

      - name: Install MacOS dependencies
        if: startsWith(matrix.os, 'macos-')
        run: |
          brew install pkg-config hyperscan libpcap

      - name: Install Golang ${{ matrix.go }}
        id: install-golang
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
      - run: go version

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Golang modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Test v4 API
        if: matrix.os == 'ubuntu-18.04'
        run: go test -v -tags hyperscan_v4 ./...

      - name: Test v5 API
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'macos-latest'
        run: go test -v ./...

  golangci:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -yq libhyperscan-dev libpcap-dev
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          working-directory: hyperscan
